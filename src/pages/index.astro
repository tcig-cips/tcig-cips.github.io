---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import PubTile from "../components/PubTile.astro";

const TILE_COUNT = 6;
const SHOW_PEOPLE = true; // ← turn it back on

const pubs = await getCollection("pubs");
const peopleAll = await getCollection("people");

// sort & pick active folks (skip alumni), show first 18
const people = peopleAll
  .filter(p => (p.data.status ?? '').toLowerCase() !== 'alum')
  .sort((a,b) => (a.data.order ?? 999) - (b.data.order ?? 999))
  .slice(0, 18);

const avatar = (p) => p.data.image ?? "/images/placeholder-avatar.svg";

const monthToNum = (m) =>
  typeof m === "number" ? m :
  typeof m === "string" ? new Date(`${m} 1, 2000`).getMonth() + 1 : 12;

const byDateDesc = (a, b) =>
  (b.data.year - a.data.year) ||
  (monthToNum(b.data.month) - monthToNum(a.data.month));

const recentTiles = pubs.sort(byDateDesc).slice(0, TILE_COUNT);
---
<BaseLayout title="TCIG/CIPS" noTopPad>
  <section
	class="relative w-screen left-1/2 right-1/2 -ml-[50vw] -mr-[50vw] mb-8 overflow-hidden"
	aria-label="Hero"
	>
	<!-- Background image -->
	<img
		src="/images/hero.jpg"
		alt=""
		class="absolute inset-0 h-full w-full object-cover"
		loading="eager"
		fetchpriority="high"
	/>

	<!-- Top gradient for white text readability -->
	<div class="absolute inset-0 bg-gradient-to-b from-black/70 via-black/30 to-transparent"></div>

	<!-- Set hero height here -->
	<div class="h-[18vh] min-h-[120px] sm:h-[16vh] md:h-[18vh]"></div>

	<!-- Top-aligned title (kept within site content width) -->
	<div class="pointer-events-auto absolute inset-x-0 top-0 z-10">
		<div class="mx-auto max-w-6xl px-4 pt-6 sm:pt-8 md:pt-10">
		<h1 class="text-white drop-shadow-lg [text-wrap:balance] text-3xl sm:text-4xl font-bold leading-tight">
			<a
			href="https://www.compimaging.dgp.toronto.edu/home"
			target="_blank"
			rel="noopener noreferrer"
			class="text-white/95 hover:underline text-lg align-middle"
			>
			Toronto Computational Imaging Group
			</a>
			<span class="text-white/80 text-lg font-normal align-middle"> / </span>
			<br />
			<span>Computational Imaging for Physical Sciences</span>
		</h1>
		</div>
	</div>
	</section>


    {SHOW_PEOPLE && (
	<div class="mb-6 flex items-center gap-3">
		<div class="flex flex-wrap items-center gap-2">
		{people.map((p) => (
			<a href={`/people/#${p.slug}`} class="block group" aria-label={p.data.name} title={p.data.name}>
			<div
				class="h-10 w-10 rounded-xl overflow-hidden ring-1 ring-black/10 transition duration-200
					group-hover:ring-blue-400 group-hover:brightness-105"
				transition:name={`person-${p.slug}`}     
			>
				<img
				src={avatar(p)}
				alt={p.data.name}
				class="h-full w-full object-cover"
				loading="lazy"
				/>
			</div>
			</a>
		))}
		</div>

		{peopleAll.length > people.length && (
		<span class="text-sm text-gray-600">+{peopleAll.length - people.length}</span>
		)}
		<a
			href="/people/"
			class="inline-flex items-center gap-2 font-semibold text-600 hover:text-blue-700"
		>
			<span aria-hidden="true" class="select-none">›</span>
			<span class="underline underline-offset-4 decoration-2">Our members</span>
		</a>
	</div>
	)}

    <!-- Group description -->
    <div class="prose max-w-none mb-8">
      <p><strong>Group description here, we are </strong> blah blah blah blah ... Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
    </div>

     <!-- Recent Publications (grid) -->
	<div class="mb-3 flex items-baseline gap-4">
		<h2 class="text-xl font-semibold">Recent Publications</h2>
		<a
			href="/publications/"
			class="inline-flex items-center gap-2 font-semibold text-600 hover:text-blue-700"
		>
			<span aria-hidden="true" class="select-none">›</span>
			<span class="underline underline-offset-4 decoration-2">View all publications</span>
		</a>
	</div>

    <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
      {recentTiles.map(p => (
		<PubTile
			entry={p}
			to={`/publications/#${p.slug}`}          // enables home tile → publications tile
			suppressTitleTransition={false}           // ok here; no duplicates on the home page
		/>
		))}
    </div>

    <!-- (Optional) Recent talks grid could go here, below the carousel) -->
  </section>

  <!-- Tiny script to handle the buttons + keyboard -->
  <script>
    const track = document.getElementById('pub-track');
    const left = document.querySelector('[data-action="scroll-left"]');
    const right = document.querySelector('[data-action="scroll-right"]');

    const step = () => {
      // Scroll ~one card at a time based on the first child width
      const first = track?.querySelector(':scope > *');
      return first ? first.getBoundingClientRect().width + 16 /* gap */ : 320;
    };

    left?.addEventListener('click', () => {
      track?.scrollBy({ left: -step(), behavior: 'smooth' });
    });
    right?.addEventListener('click', () => {
      track?.scrollBy({ left: step(), behavior: 'smooth' });
    });

    // Keyboard accessibility: arrow keys when the track is focused
    track?.setAttribute('tabindex', '0');
    track?.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowRight') {
        e.preventDefault();
        track.scrollBy({ left: step(), behavior: 'smooth' });
      } else if (e.key === 'ArrowLeft') {
        e.preventDefault();
        track.scrollBy({ left: -step(), behavior: 'smooth' });
      }
    });
  </script>
</BaseLayout>
