---
// src/pages/people/index.astro
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import PeopleSection from '../../components/PeopleSection.astro';

const everyone = (await getCollection('people'))
  .sort((a, b) =>
    (a.data.order ?? 999) - (b.data.order ?? 999) ||
    a.data.name.localeCompare(b.data.name)
  );

const by = (status) => everyone.filter((p) => (p.data.status ?? '').toLowerCase() === status);

// Buckets
const PI        = by('pi');
const Postdocs  = by('postdoc');
const Students  = everyone.filter((p) => ['phd', 'ms'].includes((p.data.status ?? '').toLowerCase()));
const UG        = by('ug');
const Alumni    = by('alum');

// Combine PI + Postdocs (PI first, then Postdocs)
const PIAndPostdocs = [...PI, ...Postdocs];
---
<BaseLayout title="People">
  <h1 class="text-3xl font-semibold mb-8">People</h1>

  {/* No section titles for these groups */}
  {PIAndPostdocs.length > 0 && <PeopleSection items={PIAndPostdocs} />}
  {Students.length > 0 && <PeopleSection items={Students} />}
  {UG.length > 0 && <PeopleSection items={UG} />}

  {/* Keep Alumni header/list as-is (not a PeopleSection grid) */}
  {Alumni.length > 0 && (
    <section class="mb-4">
      <h2 class="text-xl font-semibold mb-3">Alumni</h2>
      <ul class="text-sm leading-7 text-gray-800 list-disc pl-5">
        {Alumni.map((p) => (
          <li>
            <span class="font-medium">{p.data.name}</span>
            {p.data.role && <span class="text-gray-600"> — {p.data.role}</span>}
            {p.data.website && (
              <>
                {' '}<span>·</span>{' '}
                <a class="underline hover:no-underline" href={p.data.website}>website</a>
              </>
            )}
          </li>
        ))}
      </ul>
    </section>
  )}
</BaseLayout>