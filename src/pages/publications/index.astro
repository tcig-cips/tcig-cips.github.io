---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import PubTile from "../../components/PubTile.astro";
import { firstAuthorsEtAl } from '../../lib/format.ts';

const TILE_COUNT = 6; // ← keep in sync with home for matching transitions

const all = await getCollection("pubs");

const monthToNum = (m) =>
  typeof m === "number" ? m :
  typeof m === "string" ? new Date(`${m} 1, 2000`).getMonth() + 1 : 12;

const byDateDesc = (a, b) =>
  (b.data.year - a.data.year) ||
  (monthToNum(b.data.month) - monthToNum(a.data.month));

const sorted = all.sort(byDateDesc);
const featuredTiles = sorted.slice(0, TILE_COUNT);  // only N tiles (most recent)
---
<BaseLayout title="Publications">
  <h1 class="text-3xl font-semibold mb-6">Publications</h1>

  {featuredTiles.length > 0 && (
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-10">
      {featuredTiles.map(p => (
        <PubTile
          entry={p}
          to={`/publications/${p.slug}/`}       // publications tile → paper subpage (title morph handled by table link)
          suppressTitleTransition={true}        // prevent duplicate title names on this page
        />
      ))}
    </div>
  )}


  <!-- Full table (ALL papers, not just the tile ones) -->
  <div class="overflow-x-auto rounded-xl border">
    <table class="min-w-full text-sm">
      <thead class="bg-gray-50 text-gray-600">
        <tr>
          <th class="px-3 py-2 text-left w-28">Date</th>
          <th class="px-3 py-2 text-left">Title</th>
          <th class="px-3 py-2 text-left">First Authors</th>
          <th class="px-3 py-2 text-left w-36">Venue</th>
        </tr>
      </thead>
      <tbody class="divide-y">
        {sorted.map(p => {
          const firstEtAl = firstAuthorsEtAl(p.data.authors ?? [], p.data.first_authors);
          return (
            <tr id={p.slug}>
              <td class="px-3 py-2 text-gray-600">{p.data.month ?? ''} {p.data.year}</td>
              <td class="px-3 py-2">
                <a href={`/publications/${p.slug}/`} class="font-medium hover:underline">
                  <span transition:name={`title-${p.slug}`}>{p.data.title}</span>
                </a>
                {p.data.subtitle && <div class="text-gray-600">{p.data.subtitle}</div>}
                {p.data.authors?.length ? (
                  <div class="text-gray-700 mt-1">{p.data.authors.join(", ")}</div>
                ) : null}
              </td>
              <td class="px-3 py-2 text-gray-800">
                {firstEtAl}
              </td>
              {/* <td class="px-3 py-2 text-gray-800">
                {p.data.authors?.length ? `${p.data.authors[0]} et al.` : ''}
              </td> */}
              <td class="px-3 py-2">
                <span class="inline-flex items-center rounded border px-2 py-0.5">{p.data.venue}</span>
              </td>
            </tr>
          );
        })}
      </tbody>
    </table>
  </div>
</BaseLayout>