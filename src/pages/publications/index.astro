---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import PubTile from "../../components/PubTile.astro";
import { firstAuthorsEtAl } from '../../lib/format.ts';

const TILE_COUNT = 6; // ← keep in sync with home for matching transitions

const all = await getCollection("pubs");

const monthToNum = (m) =>
  typeof m === "number" ? m :
  typeof m === "string" ? new Date(`${m} 1, 2000`).getMonth() + 1 : 12;

const byDateDesc = (a, b) =>
  (b.data.year - a.data.year) ||
  (monthToNum(b.data.month) - monthToNum(a.data.month));

const sorted = all.sort(byDateDesc);
const featuredTiles = sorted.slice(0, TILE_COUNT);  // only N tiles (most recent)
---
<BaseLayout title="Publications">
  <h1 class="text-3xl font-semibold mb-6">Publications</h1>

  {featuredTiles.length > 0 && (
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-10">
      {featuredTiles.map(p => {
        const slug = p.slug;
        const href = `/publications/${slug}/`;
        const thumb = p.data.thumbnail ?? '/images/placeholder-thumb.svg';
        return (
          <a href={href} aria-label={p.data.title} class="block group">
            <article
              class="rounded-xl border border-black/10 p-3 transition-all duration-200 ease-out
                    bg-white
                    group-hover:bg-indigo-50 group-hover:border-indigo-200 group-hover:shadow-md"
              transition:name={`pub-${slug}`}  /* keep only card name here */
            >
              <figure
                class="relative aspect-[16/9] w-full overflow-hidden rounded-lg
                      bg-white ring-1 ring-gray-200 transition-colors duration-200
                      group-hover:bg-white group-hover:ring-indigo-300"
              >
                <img
                  src={thumb}
                  alt=""
                  class="absolute inset-0 h-full w-full object-contain"
                  loading="lazy"
                  decoding="async"
                  sizes="(min-width:1024px) 33vw, (min-width:640px) 50vw, 100vw"
                />
              </figure>

              <div class="mt-2 font-medium line-clamp-2">
                {/* IMPORTANT: no transition:name here to avoid duplicates with the table */}
                {p.data.title}
              </div>

              <div class="mt-1 text-xs text-gray-600 flex items-center gap-2">
                <span class="inline-flex items-center rounded border px-2 py-0.5">{p.data.venue}</span>
                <span>{p.data.year}</span>
                {/* add your firstEtAl display here if desired */}
              </div>
            </article>
          </a>
        );
      })}
    </div>
  )}


  <!-- Full table (ALL papers, not just the tile ones) -->
  <div class="overflow-x-auto rounded-xl border">
    <table class="min-w-full text-sm">
      <thead class="bg-gray-50 text-gray-600">
        <tr>
          <th class="px-3 py-2 text-left w-28">Date</th>
          <th class="px-3 py-2 text-left">Title</th>
          <th class="px-3 py-2 text-left">First Authors</th>
          <th class="px-3 py-2 text-left w-36">Venue</th>
        </tr>
      </thead>
      <tbody class="divide-y">
        {sorted.map(p => {
          const firstEtAl = firstAuthorsEtAl(p.data.authors ?? [], p.data.first_authors);
          return (
            <tr id={p.slug}>
              <td class="px-3 py-2 text-gray-600">{p.data.month ?? ''} {p.data.year}</td>
              <td class="px-3 py-2">
                <a href={`/publications/${p.slug}/`} class="font-medium hover:underline">
                  <span transition:name={`title-${p.slug}`}>{p.data.title}</span>
                </a>
                {p.data.subtitle && <div class="text-gray-600">{p.data.subtitle}</div>}
                {p.data.authors?.length ? (
                  <div class="text-gray-700 mt-1">{p.data.authors.join(", ")}</div>
                ) : null}
              </td>
              <td class="px-3 py-2 text-gray-800">
                {firstEtAl}
              </td>
              <td class="px-3 py-2 text-gray-800">
                {p.data.authors?.length ? `${p.data.authors[0]} et al.` : ''}
              </td>
              <td class="px-3 py-2">
                <span class="inline-flex items-center rounded border px-2 py-0.5">{p.data.venue}</span>
              </td>
            </tr>
          );
        })}
      </tbody>
    </table>
  </div>
</BaseLayout>